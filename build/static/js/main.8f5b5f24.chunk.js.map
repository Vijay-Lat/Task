{"version":3,"sources":["Components/Button.js","Components/Header.js","Task.js","Components/Tasks.js","AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","buttonClicked","style","background","className","onClick","Header","title","onShow","showAdd","defaultProps","Task","task","onDelete","toggleReminder","reminder","onDoubleClick","id","cursor","time","Tasks","map","AddTask","onAdd","useState","settitle","settime","setreminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","event","target","checked","currentTarget","App","ShowAddTask","setShowAddTask","state","setstate","Math","floor","random","console","log","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f5b5f24.chunk.js","sourcesContent":[" import React from 'react'\r\n\r\nconst Button = ({color,text,buttonClicked}) => {\r\n    return (\r\n        <button style={{background:color}} className=\"btn\" onClick={buttonClicked}>{text}</button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport Button from './Button'\r\n\r\nconst Header = ({title,onShow,showAdd}) => {\r\n  \r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd?\"red\":\"#68C883\"} text={showAdd?\"Hide\":\"Show\"} buttonClicked={onShow}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps={\r\n    title:\"Task Tracker\"\r\n}\r\nexport default Header\r\n","import React from 'react'\r\nimport { MdDelete } from 'react-icons/md'\r\n\r\nconst Task = ({task,onDelete,toggleReminder}) => {\r\n    return (\r\n        <div className={`task ${task.reminder?'reminder':''}`} onDoubleClick={()=>toggleReminder(task.id)}>\r\n            <h3>{task.title} <MdDelete style={{color:'red',cursor:'pointer'}}onClick={()=>onDelete(task.id)} /></h3>\r\n            <p>{task.time}</p>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport Task from '../Task'\r\n\r\n\r\nconst Tasks = ({task,onDelete,toggleReminder}) => {\r\n    return (\r\n\r\n        <div>\r\n            {task.map((task)=>(\r\n                <Task key={task.id} task={task} onDelete={onDelete} toggleReminder={toggleReminder}/>\r\n            ))}\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import React from 'react'\r\nimport {useState} from 'react';\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [title, settitle] = useState()\r\n    const [time, settime] = useState()\r\n    const [reminder, setreminder] = useState(false)\r\nfunction onSubmit(e){\r\n    e.preventDefault();\r\n    if(!title){\r\n        alert('please add task')\r\n        return\r\n    }\r\n    \r\n        onAdd({title,time,reminder})\r\n    \r\n    settitle('');\r\n    settime('');\r\n    setreminder(false);\r\n}\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder=\"Add Task\" value={title}\r\n                onChange={(event)=>settitle(event.target.value)}\r\n                />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day</label>\r\n                <input type=\"text\" placeholder=\"Day & Time\"\r\n                 value={time}\r\n                 onChange={(event)=>settime(event.target.value)}\r\n                />\r\n            </div>\r\n            \r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\"\r\n                checked={reminder}\r\n                 value={reminder}\r\n                 onChange={(event)=>setreminder(event.currentTarget.checked)}  />\r\n            </div>\r\n\r\n            <input type=\"submit\" value=\"Save Task\" className='btn btn-block'/>\r\n            \r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import Header from \"./Components/Header\";\nimport Tasks from \"./Components/Tasks\";\nimport {useState} from \"react\";\nimport AddTask from \"./AddTask\";\n\nfunction App() {\n  const [ShowAddTask, setShowAddTask] = useState(false)\n  // this useState is for render the objects\n  const [state, setstate] = useState([{\n    id:1,\n    title:\"Bathing\",\n    time:\"Morning\",\n    reminder:\"true\"\n},\n{\n    id:2,\n    title:\"Eating\",\n    time:\"Afternoon\",\n    reminder:\"true\"\n},\n{\n    id:3,\n    title:\"Sleeping\",\n    time:\"Night\",\n    reminder:\"true\"\n}\n\n]);\n// adding the task\nfunction addTask(task){\nconst id= Math.floor(Math.random()*10000)+1\nconsole.log({...task})\nconst newTask={id,...task}\nsetstate([...state,newTask ])\n}\n// deleting the task\nfunction deleteTask (id)\n{\nsetstate(state.filter((task)=>task.id !== id))\n}\n// chnaging the color of the task\nfunction toggleReminder(id){\n  setstate(state.map((task)=>\n(task.id === id) ? {...task, reminder:!task.reminder}:task\n\n  ))\n\n}\n\n  return (\n    <div className=\"Container\">\n     <Header onShow={()=>setShowAddTask(!ShowAddTask)} showAdd={ShowAddTask}/>\n    {ShowAddTask && <AddTask onAdd={addTask}/>} \n     {state.length>0?(<Tasks task={state} onDelete={deleteTask} toggleReminder={toggleReminder}/>):(\"No tasks to show\")  }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}